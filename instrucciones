#Instalar mosquitto y sus clientes ( para poder pub/sub)
$ sudo apt-get install mosquitto
$ sudo apt-get install mosquitto-clients

#Ahora tenemos que realizar la configuración del fichero de mosquito con los puertos que vamos a utilizar. Poner en la parte siguiente:
# =================================================================
# Default listener
# =================================================================

# IP address/hostname to bind the default listener to. If not
# given, the default listener will not be bound to a specific 
# address and so will be accessible to all network interfaces.
# bind_address ip-address/host name
#bind_address

#Plain MQTT protocol
listener 1883

# End of plain MQTT configuration

# MQTT over TLS/SSL
listener 8883
cafile /etc/mosquitto/certs/ca.crt
certfile /etc/mosquitto/certs/hostname.crt
keyfile /etc/mosquitto/certs/hostname.key

# End of MQTT over TLS/SLL configuration

# Plain WebSockets configuration
listener 8083
protocol websockets

# End of plain Websockets configuration

# WebSockets over TLS/SSL
listener 9883
protocol websockets
cafile /etc/mosquitto/certs/ca.crt
certfile /etc/mosquitto/certs/hostname.crt
keyfile /etc/mosquitto/certs/hostname.key

#Ahora tenemos que generar la claves (http://www.steves-internet-guide.com/mosquitto-tls/)
# Seguir las instrucciones paso por paso, buena explicación

#Ejecutar mosquitto

$ sudo mosquitto -c /etc/mosquitto/mosquitto.conf

#Descargar cassandra 

$ wget http://www-eu.apache.org/dist/cassandra/3.0.17/apache-cassandra-3.0.17-bin.tar.gz
$ tar xzf apache-cassandra-3.0.17-bin.tar.gz

#Ejecutar cassandra

$ bin/cassandra

# SE puede ejecutar un comando para ver si funciona 

$ nodetool status

# Crear un KEYSPACE
 CREATE KEYSPACE integra WITH replication = {'class': 'SimpleStrategy' , 'replication_factor': 2 };

# Crear una tabla de ejemplo ( como esta )
	
    #CREATE TABLE medidas2 --> time timeuuid me da problemas por que no logre convertir el tiempo que nos pasan del sensor al formato especifico de timeuuid que tiene Cassandra
    # TODO: Posible problema al enviar las medidas solo con la hora ( dos medidas en distinto a la misma hora se machacarian)

    CREATE TABLE medidas2 (mac_sensor text,time timeuuid,tipo text,valor double,num_seq int,time_ins timestamp,PRIMARY KEY (mac_sensor,time));

    CREATE TABLE medidas3 (mac_sensor text,time text,tipo text,valor double,num_seq int,time_ins timestamp,PRIMARY KEY (mac_sensor,time));

# INSERTAR VALORES
	#Valor para la medidas2
     INSERT INTO medidas2 (mac_sensor, time, tipo, valor, num_seq,time_ins) VALUES ('AB:CD:12:34', now(), 'temperatura',50,150, toTimestamp(now()));
	
	#Valor para la tabla medidas3
	INSERT INTO medidas3 (mac_sensor, time, tipo, valor, num_seq,time_ins) VALUES ('AB:CD:12:34', '22:33:32', 'temperatura',50,150, toTimestamp(now()));



# Recordar instalar las librerias necesarias de PYTHON

#Instalamos el driver de python con cassandra

$ git clone https://github.com/datastax/python-driver
$ cd paho.mqtt.python
$ python setup.py install

		
#Instalamos el driver de python con mosquitto

$ git clone https://github.com/eclipse/paho.mqtt.python.git
$ cd paho.mqtt.python
$ python setup.py install

# Ahora teniendo el broker(mosquitto)y cassandra ejecutandose, arranco los dos scripts

$ ./fillup
$ python clientMQTT.py

#Instalamos Nodejs

$ sudo apt-get install nodejs

# Instalacion de MongoDB
	
1 Import the public key used by the package management system
	$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4

2 Create a list file for MongoDB.
	$ echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list

3 Update local package database

    $ sudo apt-get update

4  Install the mongoDB ( You can install a specific realease of MongoDB --> https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/)
	 $ sudo apt-get install -y mongodb-org

5 To prevent unintend upgrades, you can pin the package at the currently version
	
	echo "mongodb-org hold" | sudo dpkg --set-selections
	echo "mongodb-org-server hold" | sudo dpkg --set-selections
	echo "mongodb-org-shell hold" | sudo dpkg --set-selections
	echo "mongodb-org-mongos hold" | sudo dpkg --set-selections
	echo "mongodb-org-tools hold" | sudo dpkg --set-selections


- To start mongodb
	$ sudo service mongod start

	# You can check if all works correctly with

	$ cat /var/log/mongodb/mongod.log | grep connections on port 
	# You should read a line like this "[initandlisten] waiting for connections on port 27017". You can change the listener port on /etc/mongod.conf

- To open a mongoDB shell

	$ mongo --host 127.0.0.1:27017

#Dependencias NPM installadas
$ sudo npm install bcrypt express cassandra-driver mongodb --save

#Ahora ya ejecutamos la aplicación web con el siguiente comando(Se ejecuta en el puerto 8080 por defecto de localhost).

$ node app.js
