#Ejecutar mosquitto

$ sudo mosquitto -c /etc/mosquitto/mosquitto.conf

#Descargar cassandra 

$ wget http://www-eu.apache.org/dist/cassandra/3.0.17/apache-cassandra-3.0.17-bin.tar.gz
$ tar xzf apache-cassandra-3.0.17-bin.tar.gz

#Ejecutar cassandra

$ bin/cassandra

# SE puede ejecutar un comando para ver si funciona 

$ nodetool status

# Crear un KEYSPACE
 CREATE KEYSPACE integra WITH replication = {'class': 'SimpleStrategy' , 'replication_factor': 2 };

# Crear una tabla de ejemplo ( como esta )
	
    #CREATE TABLE medidas2 --> time timeuuid me da problemas por que no logre convertir el tiempo que nos pasan del sensor al formato especifico de timeuuid que tiene Cassandra
    # TODO: Posible problema al enviar las medidas solo con la hora ( dos medidas en distinto a la misma hora se machacarian)

    CREATE TABLE medidas2 (mac_sensor text,time timeuuid,tipo text,valor double,num_seq int,time_ins timestamp,PRIMARY KEY (mac_sensor,time));

    CREATE TABLE medidas3 (mac_sensor text,time text,tipo text,valor double,num_seq int,time_ins timestamp,PRIMARY KEY (mac_sensor,time));

# INSERTAR VALORES
	#Valor para la medidas2
     INSERT INTO medidas2 (mac_sensor, time, tipo, valor, num_seq,time_ins) VALUES ('AB:CD:12:34', now(), 'temperatura',50,150, toTimestamp(now()));
	
	#Valor para la tabla medidas3
	INSERT INTO medidas3 (mac_sensor, time, tipo, valor, num_seq,time_ins) VALUES ('AB:CD:12:34', '22:33:32', 'temperatura',50,150, toTimestamp(now()));


# Recordar instalar las librerias necesarias de PYTHON

$ pip3 install paho-mqtt python-etcd

		
#También se puede instalar así.

$ git clone https://github.com/eclipse/paho.mqtt.python.git
$ cd paho.mqtt.python
$ python setup.py install


#Podriamos instalar apache ( link de configuracion apache - https://www.digitalocean.com/community/tutorials/how-to-install-the-apache-web-server-on-ubuntu-16-04)

#link configuracion NGINX ( Cuidado con tener activo apache2 en el puerto 80, da problemas de instalación ) 
 --- Solución errores ( https://unix.stackexchange.com/questions/153980/problems-to-install-nginx-full-on-debian-8)
	$ sudo apt-get install nginx 

# Instalacion de MongoDB
	
1 Import the public key used by the package management system
	$ sudo apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv 9DA31620334BD75D9DCB49F368818C72E52529D4

2 Create a list file for MongoDB.
	$ echo "deb [ arch=amd64 ] https://repo.mongodb.org/apt/ubuntu bionic/mongodb-org/4.0 multiverse" | sudo tee /etc/apt/sources.list.d/mongodb-org-4.0.list

3 Update local package database

    $ sudo apt-get update

4  Install the mongoDB ( You can install a specific realease of MongoDB --> https://docs.mongodb.com/manual/tutorial/install-mongodb-on-ubuntu/)
	 $ sudo apt-get install -y mongodb-org

5 To prevent unintend upgrades, you can pin the package at the currently version
	
	echo "mongodb-org hold" | sudo dpkg --set-selections
	echo "mongodb-org-server hold" | sudo dpkg --set-selections
	echo "mongodb-org-shell hold" | sudo dpkg --set-selections
	echo "mongodb-org-mongos hold" | sudo dpkg --set-selections
	echo "mongodb-org-tools hold" | sudo dpkg --set-selections


- To start mongodb
	$ sudo service mongod start

	# You can check if all works correctly with

	$ cat /var/log/mongodb/mongod.log | grep connections on port 
	# You should read a line like this "[initandlisten] waiting for connections on port 27017". You can change the listener port on /etc/mongod.conf

- To open a mongoDB shell

	$ mongo --host 127.0.0.1:27017
